{"ast":null,"code":"import _classCallCheck from\"C:/Users/lowka/OneDrive/Desktop/web dev/client-start/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/lowka/OneDrive/Desktop/web dev/client-start/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/lowka/OneDrive/Desktop/web dev/client-start/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/lowka/OneDrive/Desktop/web dev/client-start/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";/*==================================================\r\nCampusContainer.js\r\n\r\nThe Container component is responsible for stateful logic and data fetching, and\r\npasses data (if any) as props to the corresponding View component.\r\nIf needed, it also defines the component's \"connect\" function.\r\n================================================== */import Header from'./Header';import React,{Component}from\"react\";import{connect}from\"react-redux\";import{fetchCampusThunk}from\"../../store/thunks\";import{CampusView}from\"../views\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CampusContainer=/*#__PURE__*/function(_Component){_inherits(CampusContainer,_Component);var _super=_createSuper(CampusContainer);function CampusContainer(){_classCallCheck(this,CampusContainer);return _super.apply(this,arguments);}_createClass(CampusContainer,[{key:\"componentDidMount\",value:// Get the specific campus data from back-end database\nfunction componentDidMount(){// Get campus ID from URL (API link)\nthis.props.fetchCampus(this.props.match.params.id);}// Render a Campus view by passing campus data as props to the corresponding View component\n},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(CampusView,{campus:this.props.campus})]});}}]);return CampusContainer;}(Component);// The following 2 input arguments are passed to the \"connect\" function used by \"CampusContainer\" component to connect to Redux Store.\n// 1. The \"mapState\" argument specifies the data from Redux Store that the component needs.\n// The \"mapState\" is called when the Store State changes, and it returns a data object of \"campus\".\nvar mapState=function mapState(state){return{campus:state.campus// Get the State object from Reducer \"campus\"\n};};// 2. The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\n// The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\nvar mapDispatch=function mapDispatch(dispatch){return{fetchCampus:function fetchCampus(id){return dispatch(fetchCampusThunk(id));}};};// Export store-connected container by default\n// CampusContainer uses \"connect\" function to connect to Redux Store and to read values from the Store \n// (and re-read the values when the Store State updates).\nexport default connect(mapState,mapDispatch)(CampusContainer);","map":{"version":3,"names":["Header","React","Component","connect","fetchCampusThunk","CampusView","CampusContainer","props","fetchCampus","match","params","id","campus","mapState","state","mapDispatch","dispatch"],"sources":["C:/Users/lowka/OneDrive/Desktop/web dev/client-start/src/components/containers/CampusContainer.js"],"sourcesContent":["/*==================================================\r\nCampusContainer.js\r\n\r\nThe Container component is responsible for stateful logic and data fetching, and\r\npasses data (if any) as props to the corresponding View component.\r\nIf needed, it also defines the component's \"connect\" function.\r\n================================================== */\r\nimport Header from './Header';\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchCampusThunk } from \"../../store/thunks\";\r\n\r\nimport { CampusView } from \"../views\";\r\n\r\nclass CampusContainer extends Component {\r\n  // Get the specific campus data from back-end database\r\n  componentDidMount() {\r\n    // Get campus ID from URL (API link)\r\n    this.props.fetchCampus(this.props.match.params.id);\r\n  }\r\n\r\n  // Render a Campus view by passing campus data as props to the corresponding View component\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <CampusView campus={this.props.campus} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// The following 2 input arguments are passed to the \"connect\" function used by \"CampusContainer\" component to connect to Redux Store.\r\n// 1. The \"mapState\" argument specifies the data from Redux Store that the component needs.\r\n// The \"mapState\" is called when the Store State changes, and it returns a data object of \"campus\".\r\nconst mapState = (state) => {\r\n  return {\r\n    campus: state.campus,  // Get the State object from Reducer \"campus\"\r\n  };\r\n};\r\n// 2. The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\r\n// The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\r\nconst mapDispatch = (dispatch) => {\r\n  return {\r\n    fetchCampus: (id) => dispatch(fetchCampusThunk(id)),\r\n  };\r\n};\r\n\r\n// Export store-connected container by default\r\n// CampusContainer uses \"connect\" function to connect to Redux Store and to read values from the Store \r\n// (and re-read the values when the Store State updates).\r\nexport default connect(mapState, mapDispatch)(CampusContainer);"],"mappings":"4pBAAA;AACA;AACA;AACA;AACA;AACA;AACA,qDACA,MAAOA,OAAM,KAAM,UAAU,CAC7B,MAAOC,MAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,OAASC,OAAO,KAAQ,aAAa,CACrC,OAASC,gBAAgB,KAAQ,oBAAoB,CAErD,OAASC,UAAU,KAAQ,UAAU,CAAC,2FAEhCC,gBAAe,qRACnB;AACA,4BAAoB,CAClB;AACA,IAAI,CAACC,KAAK,CAACC,WAAW,CAAC,IAAI,CAACD,KAAK,CAACE,KAAK,CAACC,MAAM,CAACC,EAAE,CAAC,CACpD,CAEA;AAAA,sBACA,iBAAS,CACP,mBACE,oCACE,KAAC,MAAM,IAAG,cACV,KAAC,UAAU,EAAC,MAAM,CAAE,IAAI,CAACJ,KAAK,CAACK,MAAO,EAAG,GACrC,CAEV,CAAC,6BAf2BV,SAAS,EAkBvC;AACA;AACA;AACA,GAAMW,SAAQ,CAAG,QAAXA,SAAQ,CAAIC,KAAK,CAAK,CAC1B,MAAO,CACLF,MAAM,CAAEE,KAAK,CAACF,MAAS;AACzB,CAAC,CACH,CAAC,CACD;AACA;AACA,GAAMG,YAAW,CAAG,QAAdA,YAAW,CAAIC,QAAQ,CAAK,CAChC,MAAO,CACLR,WAAW,CAAE,qBAACG,EAAE,QAAKK,SAAQ,CAACZ,gBAAgB,CAACO,EAAE,CAAC,CAAC,EACrD,CAAC,CACH,CAAC,CAED;AACA;AACA;AACA,cAAeR,QAAO,CAACU,QAAQ,CAAEE,WAAW,CAAC,CAACT,eAAe,CAAC"},"metadata":{},"sourceType":"module"}