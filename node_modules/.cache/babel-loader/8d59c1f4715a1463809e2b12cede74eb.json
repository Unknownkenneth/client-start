{"ast":null,"code":"import _classCallCheck from\"C:/Users/lowka/OneDrive/Desktop/web dev/client-start/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/lowka/OneDrive/Desktop/web dev/client-start/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/lowka/OneDrive/Desktop/web dev/client-start/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/lowka/OneDrive/Desktop/web dev/client-start/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";/*==================================================\r\nStudentContainer.js\r\n\r\nThe Container component is responsible for stateful logic and data fetching, and\r\npasses data (if any) as props to the corresponding View component.\r\nIf needed, it also defines the component's \"connect\" function.\r\n================================================== */import Header from'./Header';import React,{Component}from\"react\";import{connect}from\"react-redux\";import{fetchStudentThunk}from\"../../store/thunks\";import{StudentView}from\"../views\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StudentContainer=/*#__PURE__*/function(_Component){_inherits(StudentContainer,_Component);var _super=_createSuper(StudentContainer);function StudentContainer(){_classCallCheck(this,StudentContainer);return _super.apply(this,arguments);}_createClass(StudentContainer,[{key:\"componentDidMount\",value:// Get student data from back-end database\nfunction componentDidMount(){//getting student ID from url\nthis.props.fetchStudent(this.props.match.params.id);}// Render Student view by passing student data as props to the corresponding View component\n},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(StudentView,{student:this.props.student})]});}}]);return StudentContainer;}(Component);// The following 2 input arguments are passed to the \"connect\" function used by \"StudentContainer\" to connect to Redux Store.  \n// The following 2 input arguments are passed to the \"connect\" function used by \"AllCampusesContainer\" component to connect to Redux Store.\nvar mapState=function mapState(state){return{student:state.student// Get the State object from Reducer \"student\"\n};};// 2. The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\n// The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\nvar mapDispatch=function mapDispatch(dispatch){return{fetchStudent:function fetchStudent(id){return dispatch(fetchStudentThunk(id));}};};// Export store-connected container by default\n// StudentContainer uses \"connect\" function to connect to Redux Store and to read values from the Store \n// (and re-read the values when the Store State updates).\nexport default connect(mapState,mapDispatch)(StudentContainer);","map":{"version":3,"names":["Header","React","Component","connect","fetchStudentThunk","StudentView","StudentContainer","props","fetchStudent","match","params","id","student","mapState","state","mapDispatch","dispatch"],"sources":["C:/Users/lowka/OneDrive/Desktop/web dev/client-start/src/components/containers/StudentContainer.js"],"sourcesContent":["/*==================================================\r\nStudentContainer.js\r\n\r\nThe Container component is responsible for stateful logic and data fetching, and\r\npasses data (if any) as props to the corresponding View component.\r\nIf needed, it also defines the component's \"connect\" function.\r\n================================================== */\r\nimport Header from './Header';\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchStudentThunk } from \"../../store/thunks\";\r\nimport { StudentView } from \"../views\";\r\n\r\nclass StudentContainer extends Component {\r\n  // Get student data from back-end database\r\n  componentDidMount() {\r\n    //getting student ID from url\r\n    this.props.fetchStudent(this.props.match.params.id);\r\n  }\r\n\r\n  // Render Student view by passing student data as props to the corresponding View component\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <StudentView student={this.props.student} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// The following 2 input arguments are passed to the \"connect\" function used by \"StudentContainer\" to connect to Redux Store.  \r\n// The following 2 input arguments are passed to the \"connect\" function used by \"AllCampusesContainer\" component to connect to Redux Store.\r\nconst mapState = (state) => {\r\n  return {\r\n    student: state.student,  // Get the State object from Reducer \"student\"\r\n  };\r\n};\r\n// 2. The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\r\n// The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\r\nconst mapDispatch = (dispatch) => {\r\n  return {\r\n    fetchStudent: (id) => dispatch(fetchStudentThunk(id)),\r\n  };\r\n};\r\n\r\n// Export store-connected container by default\r\n// StudentContainer uses \"connect\" function to connect to Redux Store and to read values from the Store \r\n// (and re-read the values when the Store State updates).\r\nexport default connect(mapState, mapDispatch)(StudentContainer);"],"mappings":"4pBAAA;AACA;AACA;AACA;AACA;AACA;AACA,qDACA,MAAOA,OAAM,KAAM,UAAU,CAC7B,MAAOC,MAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,OAASC,OAAO,KAAQ,aAAa,CACrC,OAASC,iBAAiB,KAAQ,oBAAoB,CACtD,OAASC,WAAW,KAAQ,UAAU,CAAC,2FAEjCC,iBAAgB,0RACpB;AACA,4BAAoB,CAClB;AACA,IAAI,CAACC,KAAK,CAACC,YAAY,CAAC,IAAI,CAACD,KAAK,CAACE,KAAK,CAACC,MAAM,CAACC,EAAE,CAAC,CACrD,CAEA;AAAA,sBACA,iBAAS,CACP,mBACE,oCACE,KAAC,MAAM,IAAG,cACV,KAAC,WAAW,EAAC,OAAO,CAAE,IAAI,CAACJ,KAAK,CAACK,OAAQ,EAAG,GACxC,CAEV,CAAC,8BAf4BV,SAAS,EAkBxC;AACA;AACA,GAAMW,SAAQ,CAAG,QAAXA,SAAQ,CAAIC,KAAK,CAAK,CAC1B,MAAO,CACLF,OAAO,CAAEE,KAAK,CAACF,OAAU;AAC3B,CAAC,CACH,CAAC,CACD;AACA;AACA,GAAMG,YAAW,CAAG,QAAdA,YAAW,CAAIC,QAAQ,CAAK,CAChC,MAAO,CACLR,YAAY,CAAE,sBAACG,EAAE,QAAKK,SAAQ,CAACZ,iBAAiB,CAACO,EAAE,CAAC,CAAC,EACvD,CAAC,CACH,CAAC,CAED;AACA;AACA;AACA,cAAeR,QAAO,CAACU,QAAQ,CAAEE,WAAW,CAAC,CAACT,gBAAgB,CAAC"},"metadata":{},"sourceType":"module"}