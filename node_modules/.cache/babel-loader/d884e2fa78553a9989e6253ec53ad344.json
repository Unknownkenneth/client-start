{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lowka\\\\OneDrive\\\\Desktop\\\\web dev\\\\client-start\\\\src\\\\components\\\\containers\\\\EditStudentContainer.js\";\n/*==================================================\r\nEditStudentContainer.js\r\nThe Container component is responsible for stateful logic and data fetching, and\r\npasses data (if any) as props to the corresponding View component.\r\nIf needed, it also defines the component's \"connect\" function.\r\n================================================== */\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport EditStudentView from '../views/EditStudentView';\nimport { editStudentThunk, fetchStudentThunk } from '../../store/thunks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass EditStudentContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n    this.handleSubmit = async (event, studentpassed) => {\n      event.preventDefault();\n      let student = {\n        firstname: this.state.firstname,\n        lastname: this.state.lastname,\n        campusId: this.state.campusId,\n        email: this.state.email,\n        gpa: this.state.gpa,\n        id: this.props.match.params.id\n      };\n      if (student.firstname === '') {\n        student.firstname = studentpassed.firstname;\n      }\n      if (student.lastname === '') {\n        student.lastname = studentpassed.lastname;\n      }\n      if (student.campusId === null) {\n        student.campusId = studentpassed.campusId;\n      }\n      if (student.email === '') {\n        student.email = studentpassed.email;\n      }\n      if (student.gpa === '') {\n        student.gpa = studentpassed.gpa;\n      }\n      let editStudent = await this.props.editStudent(student);\n      this.setState({\n        firstname: \"\",\n        lastname: \"\",\n        campusId: null,\n        email: \"\",\n        gpa: 0.0,\n        redirect: true,\n        redirectId: student.id\n      });\n    };\n    this.state = {\n      firstname: \"\",\n      lastname: \"\",\n      campusId: null,\n      email: \"\",\n      redirect: false,\n      redirectId: null\n    };\n  }\n  componentDidMount() {\n    this.props.fetchStudent(this.props.match.params.id);\n  }\n  componentWillUnmount() {\n    this.setState({\n      redirect: false,\n      redirectId: null\n    });\n  }\n  render() {\n    if (this.state.redirect) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: `/student/${this.state.redirectId}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 19\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(EditStudentView, {\n      handleChange: this.handleChange,\n      handleSubmit: this.handleSubmit,\n      student: this.props.student\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }, this);\n  }\n}\nconst mapState = state => {\n  return {\n    student: state.student\n  };\n};\nconst mapDispatch = dispatch => {\n  return {\n    editStudent: student => dispatch(editStudentThunk(student)),\n    fetchStudent: id => dispatch(fetchStudentThunk(id))\n  };\n};\nexport default connect(mapState, mapDispatch)(EditStudentContainer);","map":{"version":3,"names":["Component","connect","Redirect","EditStudentView","editStudentThunk","fetchStudentThunk","EditStudentContainer","constructor","props","handleChange","event","setState","target","name","value","handleSubmit","studentpassed","preventDefault","student","firstname","state","lastname","campusId","email","gpa","id","match","params","editStudent","redirect","redirectId","componentDidMount","fetchStudent","componentWillUnmount","render","mapState","mapDispatch","dispatch"],"sources":["C:/Users/lowka/OneDrive/Desktop/web dev/client-start/src/components/containers/EditStudentContainer.js"],"sourcesContent":["/*==================================================\r\nEditStudentContainer.js\r\nThe Container component is responsible for stateful logic and data fetching, and\r\npasses data (if any) as props to the corresponding View component.\r\nIf needed, it also defines the component's \"connect\" function.\r\n================================================== */\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport EditStudentView from '../views/EditStudentView';\r\nimport { editStudentThunk, fetchStudentThunk } from '../../store/thunks';\r\n\r\n\r\nclass EditStudentContainer extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          firstname: \"\", \r\n          lastname: \"\", \r\n          campusId: null,\r\n          email: \"\",  \r\n          redirect: false, \r\n          redirectId: null\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        this.props.fetchStudent(this.props.match.params.id);\r\n    }\r\n    handleChange = event => {\r\n      this.setState({\r\n        [event.target.name]: event.target.value\r\n      });\r\n    }\r\n\r\n    handleSubmit = async (event,studentpassed) => {\r\n        event.preventDefault();\r\n\r\n        let student = {\r\n            firstname: this.state.firstname,\r\n            lastname: this.state.lastname,\r\n            campusId: this.state.campusId, \r\n            email: this.state.email, \r\n            gpa: this.state.gpa, \r\n            id: this.props.match.params.id\r\n        };\r\n        if(student.firstname==='')\r\n        {\r\n          student.firstname=studentpassed.firstname;\r\n        }\r\n        if(student.lastname==='')\r\n        {\r\n          student.lastname=studentpassed.lastname;\r\n        }        \r\n        if(student.campusId===null)\r\n        {\r\n        \r\n         \r\n          student.campusId=studentpassed.campusId;\r\n        }        \r\n        if(student.email==='')\r\n        {\r\n          student.email=studentpassed.email;\r\n        }        \r\n        if(student.gpa==='')\r\n        {\r\n          student.gpa=studentpassed.gpa;\r\n        }\r\n        \r\n        let editStudent = await this.props.editStudent(student);\r\n\r\n        this.setState({\r\n          firstname: \"\", \r\n          lastname: \"\", \r\n          campusId: null, \r\n          email:\"\",\r\n          gpa:0.0, \r\n          redirect: true, \r\n          redirectId: student.id\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.setState({redirect: false, redirectId: null});\r\n    }\r\n\r\n    render() {\r\n        if(this.state.redirect) {\r\n          return (<Redirect to={`/student/${this.state.redirectId}`}/>)\r\n        }\r\n        return (\r\n          <EditStudentView \r\n            handleChange = {this.handleChange} \r\n            handleSubmit={this.handleSubmit}    \r\n            student={this.props.student}  \r\n          />\r\n        );\r\n    }\r\n}\r\nconst mapState= (state) => {\r\n    return {\r\n        student: state.student,\r\n    };\r\n};\r\nconst mapDispatch = (dispatch) => {\r\n    return({\r\n        editStudent: (student) => dispatch(editStudentThunk(student)),\r\n        fetchStudent: (id) => dispatch(fetchStudentThunk(id))\r\n    })\r\n}\r\n\r\nexport default connect(mapState, mapDispatch)(EditStudentContainer);"],"mappings":"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"},"metadata":{},"sourceType":"module"}