{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/lowka/OneDrive/Desktop/web dev/client-start/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/lowka/OneDrive/Desktop/web dev/client-start/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"C:/Users/lowka/OneDrive/Desktop/web dev/client-start/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"C:/Users/lowka/OneDrive/Desktop/web dev/client-start/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/lowka/OneDrive/Desktop/web dev/client-start/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/lowka/OneDrive/Desktop/web dev/client-start/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/lowka/OneDrive/Desktop/web dev/client-start/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";/*==================================================\r\nNewStudentContainer.js\r\n\r\nThe Container component is responsible for stateful logic and data fetching, and\r\npasses data (if any) as props to the corresponding View component.\r\nIf needed, it also defines the component's \"connect\" function.\r\n================================================== */import Header from'./Header';import{Component}from'react';import{connect}from'react-redux';import{Redirect}from'react-router-dom';import NewStudentView from'../views/NewStudentView';import{addStudentThunk}from'../../store/thunks';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var NewStudentContainer=/*#__PURE__*/function(_Component){_inherits(NewStudentContainer,_Component);var _super=_createSuper(NewStudentContainer);// Initialize state\nfunction NewStudentContainer(props){var _this;_classCallCheck(this,NewStudentContainer);_this=_super.call(this,props);_this.handleChange=function(event){_this.setState(_defineProperty({},event.target.name,event.target.value));};_this.handleSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var student,newStudent;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();// Prevent browser reload/refresh after submit.\nstudent={firstname:_this.state.firstname,lastname:_this.state.lastname,campusId:_this.state.campusId};// Add new student in back-end database\n_context.next=4;return _this.props.addStudent(student);case 4:newStudent=_context.sent;// Update state, and trigger redirect to show the new student\n_this.setState({firstname:\"\",lastname:\"\",campusId:null,redirect:true,redirectId:newStudent.id});case 6:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();_this.state={firstname:\"\",lastname:\"\",campusId:null,redirect:false,redirectId:null};return _this;}// Capture input data when it is entered\n_createClass(NewStudentContainer,[{key:\"componentWillUnmount\",value:// Unmount when the component is being removed from the DOM:\nfunction componentWillUnmount(){this.setState({redirect:false,redirectId:null});}// Render new student input form\n},{key:\"render\",value:function render(){// Redirect to new student's page after submit\nif(this.state.redirect){return/*#__PURE__*/_jsx(Redirect,{to:\"/student/\".concat(this.state.redirectId)});}// Display the input form via the corresponding View component\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(NewStudentView,{handleChange:this.handleChange,handleSubmit:this.handleSubmit})]});}}]);return NewStudentContainer;}(Component);// The following input argument is passed to the \"connect\" function used by \"NewStudentContainer\" component to connect to Redux Store.\n// The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\n// The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\nvar mapDispatch=function mapDispatch(dispatch){return{addStudent:function addStudent(student){return dispatch(addStudentThunk(student));}};};// Export store-connected container by default\n// NewStudentContainer uses \"connect\" function to connect to Redux Store and to read values from the Store \n// (and re-read the values when the Store State updates).\nexport default connect(null,mapDispatch)(NewStudentContainer);","map":{"version":3,"names":["Header","Component","connect","Redirect","NewStudentView","addStudentThunk","NewStudentContainer","props","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","student","firstname","state","lastname","campusId","addStudent","newStudent","redirect","redirectId","id","mapDispatch","dispatch"],"sources":["C:/Users/lowka/OneDrive/Desktop/web dev/client-start/src/components/containers/NewStudentContainer.js"],"sourcesContent":["/*==================================================\r\nNewStudentContainer.js\r\n\r\nThe Container component is responsible for stateful logic and data fetching, and\r\npasses data (if any) as props to the corresponding View component.\r\nIf needed, it also defines the component's \"connect\" function.\r\n================================================== */\r\nimport Header from './Header';\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport NewStudentView from '../views/NewStudentView';\r\nimport { addStudentThunk } from '../../store/thunks';\r\n\r\nclass NewStudentContainer extends Component {\r\n  // Initialize state\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      firstname: \"\", \r\n      lastname: \"\", \r\n      campusId: null, \r\n      redirect: false, \r\n      redirectId: null\r\n    };\r\n  }\r\n\r\n  // Capture input data when it is entered\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  // Take action after user click the submit button\r\n  handleSubmit = async event => {\r\n    event.preventDefault();  // Prevent browser reload/refresh after submit.\r\n\r\n    let student = {\r\n        firstname: this.state.firstname,\r\n        lastname: this.state.lastname,\r\n        campusId: this.state.campusId\r\n    };\r\n    \r\n    // Add new student in back-end database\r\n    let newStudent = await this.props.addStudent(student);\r\n\r\n    // Update state, and trigger redirect to show the new student\r\n    this.setState({\r\n      firstname: \"\", \r\n      lastname: \"\", \r\n      campusId: null, \r\n      redirect: true, \r\n      redirectId: newStudent.id\r\n    });\r\n  }\r\n\r\n  // Unmount when the component is being removed from the DOM:\r\n  componentWillUnmount() {\r\n      this.setState({redirect: false, redirectId: null});\r\n  }\r\n\r\n  // Render new student input form\r\n  render() {\r\n    // Redirect to new student's page after submit\r\n    if(this.state.redirect) {\r\n      return (<Redirect to={`/student/${this.state.redirectId}`}/>)\r\n    }\r\n\r\n    // Display the input form via the corresponding View component\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <NewStudentView \r\n          handleChange = {this.handleChange} \r\n          handleSubmit={this.handleSubmit}      \r\n        />\r\n      </div>          \r\n    );\r\n  }\r\n}\r\n\r\n// The following input argument is passed to the \"connect\" function used by \"NewStudentContainer\" component to connect to Redux Store.\r\n// The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\r\n// The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\r\nconst mapDispatch = (dispatch) => {\r\n    return({\r\n        addStudent: (student) => dispatch(addStudentThunk(student)),\r\n    })\r\n}\r\n\r\n// Export store-connected container by default\r\n// NewStudentContainer uses \"connect\" function to connect to Redux Store and to read values from the Store \r\n// (and re-read the values when the Store State updates).\r\nexport default connect(null, mapDispatch)(NewStudentContainer);"],"mappings":"4pCAAA;AACA;AACA;AACA;AACA;AACA;AACA,qDACA,MAAOA,OAAM,KAAM,UAAU,CAC7B,OAASC,SAAS,KAAQ,OAAO,CACjC,OAASC,OAAO,KAAQ,aAAa,CACrC,OAASC,QAAQ,KAAQ,kBAAkB,CAE3C,MAAOC,eAAc,KAAM,yBAAyB,CACpD,OAASC,eAAe,KAAQ,oBAAoB,CAAC,2FAE/CC,oBAAmB,0HACvB;AACA,6BAAYC,KAAK,CAAC,qDAChB,uBAAMA,KAAK,EAAE,MAWfC,YAAY,CAAG,SAAAC,KAAK,CAAI,CACtB,MAAKC,QAAQ,oBACVD,KAAK,CAACE,MAAM,CAACC,IAAI,CAAGH,KAAK,CAACE,MAAM,CAACE,KAAK,EACvC,CACJ,CAAC,OAGDC,YAAY,0FAAG,iBAAML,KAAK,yIACxBA,KAAK,CAACM,cAAc,EAAE,CAAG;AAErBC,OAAO,CAAG,CACVC,SAAS,CAAE,MAAKC,KAAK,CAACD,SAAS,CAC/BE,QAAQ,CAAE,MAAKD,KAAK,CAACC,QAAQ,CAC7BC,QAAQ,CAAE,MAAKF,KAAK,CAACE,QACzB,CAAC,CAED;AAAA,sBACuB,OAAKb,KAAK,CAACc,UAAU,CAACL,OAAO,CAAC,QAAjDM,UAAU,eAEd;AACA,MAAKZ,QAAQ,CAAC,CACZO,SAAS,CAAE,EAAE,CACbE,QAAQ,CAAE,EAAE,CACZC,QAAQ,CAAE,IAAI,CACdG,QAAQ,CAAE,IAAI,CACdC,UAAU,CAAEF,UAAU,CAACG,EACzB,CAAC,CAAC,CAAC,sDACJ,+DArCC,MAAKP,KAAK,CAAG,CACXD,SAAS,CAAE,EAAE,CACbE,QAAQ,CAAE,EAAE,CACZC,QAAQ,CAAE,IAAI,CACdG,QAAQ,CAAE,KAAK,CACfC,UAAU,CAAE,IACd,CAAC,CAAC,aACJ,CAEA;AAAA,oEA8BA;AACA,+BAAuB,CACnB,IAAI,CAACd,QAAQ,CAAC,CAACa,QAAQ,CAAE,KAAK,CAAEC,UAAU,CAAE,IAAI,CAAC,CAAC,CACtD,CAEA;AAAA,sBACA,iBAAS,CACP;AACA,GAAG,IAAI,CAACN,KAAK,CAACK,QAAQ,CAAE,CACtB,mBAAQ,KAAC,QAAQ,EAAC,EAAE,oBAAc,IAAI,CAACL,KAAK,CAACM,UAAU,CAAG,EAAE,CAC9D,CAEA;AACA,mBACE,oCACE,KAAC,MAAM,IAAG,cACV,KAAC,cAAc,EACb,YAAY,CAAI,IAAI,CAAChB,YAAa,CAClC,YAAY,CAAE,IAAI,CAACM,YAAa,EAChC,GACE,CAEV,CAAC,iCAjE+Bb,SAAS,EAoE3C;AACA;AACA;AACA,GAAMyB,YAAW,CAAG,QAAdA,YAAW,CAAIC,QAAQ,CAAK,CAC9B,MAAO,CACHN,UAAU,CAAE,oBAACL,OAAO,QAAKW,SAAQ,CAACtB,eAAe,CAACW,OAAO,CAAC,CAAC,EAC/D,CAAC,CACL,CAAC,CAED;AACA;AACA;AACA,cAAed,QAAO,CAAC,IAAI,CAAEwB,WAAW,CAAC,CAACpB,mBAAmB,CAAC"},"metadata":{},"sourceType":"module"}