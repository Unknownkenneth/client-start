{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lowka\\\\OneDrive\\\\Desktop\\\\web dev\\\\client-start\\\\src\\\\components\\\\containers\\\\NewCampusContainer.js\";\n// update index\n\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport NewCampusView from '../views/NewCampusView';\nimport { addCampusThunk } from '../../store/thunks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass NewCampusContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      let campus = {\n        name: this.state.name,\n        address: this.state.address,\n        description: this.state.description,\n        imageURL: this.state.ImageURl\n      };\n      let newCampus = await this.props.addCampus(campus);\n      this.setState({\n        name: \"\",\n        address: \"\",\n        description: \"\",\n        imageURL: \"\",\n        redirect: true,\n        redirectId: newCampus.id\n      });\n    };\n    this.state = {\n      name: \"\",\n      address: \"\",\n      description: \"\",\n      imageUrl: \"\",\n      redirect: false,\n      redirectId: null\n    };\n  }\n  componentWillUnmount() {\n    this.setState({\n      redirect: false,\n      redirectId: null\n    });\n  }\n  render() {\n    if (this.state.redirect) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: `/campus/${this.state.redirectId}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 19\n      }, this);\n    }\n    // displays page\n    return /*#__PURE__*/_jsxDEV(NewCampusView, {\n      handleChange: this.handleChange,\n      handleSubmit: this.handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }, this);\n  }\n}\n\n// The following input argument is passed to the \"connect\" function used by \"NewCampusContainer\" component to connect to Redux Store.\n// The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\n// The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\nconst mapDispatch = dispatch => {\n  return {\n    addCampus: campus => dispatch(addCampusThunk(campus))\n  };\n};\n// Export store-connected container by default\n// NewCampusContainer uses \"connect\" function to connect to Redux Store and to read values from the Store\n// (and re-read the values when the Store State updates).\nexport default connect(null, mapDispatch)(NewCampusContainer);","map":{"version":3,"names":["Component","connect","Redirect","NewCampusView","addCampusThunk","NewCampusContainer","constructor","props","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","campus","state","address","description","imageURL","ImageURl","newCampus","addCampus","redirect","redirectId","id","imageUrl","componentWillUnmount","render","mapDispatch","dispatch"],"sources":["C:/Users/lowka/OneDrive/Desktop/web dev/client-start/src/components/containers/NewCampusContainer.js"],"sourcesContent":["// update index\r\n\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n \r\nimport NewCampusView from '../views/NewCampusView';\r\nimport { addCampusThunk } from '../../store/thunks';\r\n\r\n\r\nclass NewCampusContainer extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          name: \"\", \r\n          address: \"\", \r\n          description: \"\",\r\n          imageUrl:\"\", \r\n          redirect: false, \r\n          redirectId: null\r\n        };\r\n    }\r\n\r\n    handleChange = event => {\r\n      this.setState({\r\n        [event.target.name]: event.target.value\r\n      });\r\n    }\r\n\r\n    handleSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        let campus = {\r\n            name: this.state.name,\r\n            address: this.state.address,\r\n            description: this.state.description,\r\n            imageURL: this.state.ImageURl\r\n        };\r\n        \r\n        let newCampus = await this.props.addCampus(campus);\r\n\r\n        this.setState({\r\n          name: \"\", \r\n          address: \"\", \r\n          description: \"\",\r\n          imageURL: \"\",\r\n          redirect: true, \r\n          redirectId: newCampus.id\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.setState({redirect: false, redirectId: null});\r\n    }\r\n\r\n    render() {\r\n        if(this.state.redirect) {\r\n          return (<Redirect to={`/campus/${this.state.redirectId}`}/>)\r\n        }\r\n        // displays page\r\n        return (\r\n          <NewCampusView \r\n            handleChange = {this.handleChange} \r\n            handleSubmit={this.handleSubmit}      \r\n          />\r\n        );\r\n    }\r\n}\r\n\r\n// The following input argument is passed to the \"connect\" function used by \"NewCampusContainer\" component to connect to Redux Store.\r\n// The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\r\n// The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\r\nconst mapDispatch = (dispatch) => {\r\n    return({\r\n        addCampus: (campus) => dispatch(addCampusThunk(campus)),\r\n    })\r\n}\r\n// Export store-connected container by default\r\n// NewCampusContainer uses \"connect\" function to connect to Redux Store and to read values from the Store\r\n// (and re-read the values when the Store State updates).\r\nexport default connect(null, mapDispatch)(NewCampusContainer);"],"mappings":";AAAA;;AAEA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,QAAQ,QAAQ,kBAAkB;AAE3C,OAAOC,aAAa,MAAM,wBAAwB;AAClD,SAASC,cAAc,QAAQ,oBAAoB;AAAC;AAGpD,MAAMC,kBAAkB,SAASL,SAAS,CAAC;EACvCM,WAAW,CAACC,KAAK,EAAC;IACd,KAAK,CAACA,KAAK,CAAC;IAAC,KAWjBC,YAAY,GAAGC,KAAK,IAAI;MACtB,IAAI,CAACC,QAAQ,CAAC;QACZ,CAACD,KAAK,CAACE,MAAM,CAACC,IAAI,GAAGH,KAAK,CAACE,MAAM,CAACE;MACpC,CAAC,CAAC;IACJ,CAAC;IAAA,KAEDC,YAAY,GAAG,MAAML,KAAK,IAAI;MAC1BA,KAAK,CAACM,cAAc,EAAE;MAEtB,IAAIC,MAAM,GAAG;QACTJ,IAAI,EAAE,IAAI,CAACK,KAAK,CAACL,IAAI;QACrBM,OAAO,EAAE,IAAI,CAACD,KAAK,CAACC,OAAO;QAC3BC,WAAW,EAAE,IAAI,CAACF,KAAK,CAACE,WAAW;QACnCC,QAAQ,EAAE,IAAI,CAACH,KAAK,CAACI;MACzB,CAAC;MAED,IAAIC,SAAS,GAAG,MAAM,IAAI,CAACf,KAAK,CAACgB,SAAS,CAACP,MAAM,CAAC;MAElD,IAAI,CAACN,QAAQ,CAAC;QACZE,IAAI,EAAE,EAAE;QACRM,OAAO,EAAE,EAAE;QACXC,WAAW,EAAE,EAAE;QACfC,QAAQ,EAAE,EAAE;QACZI,QAAQ,EAAE,IAAI;QACdC,UAAU,EAAEH,SAAS,CAACI;MACxB,CAAC,CAAC;IACN,CAAC;IApCG,IAAI,CAACT,KAAK,GAAG;MACXL,IAAI,EAAE,EAAE;MACRM,OAAO,EAAE,EAAE;MACXC,WAAW,EAAE,EAAE;MACfQ,QAAQ,EAAC,EAAE;MACXH,QAAQ,EAAE,KAAK;MACfC,UAAU,EAAE;IACd,CAAC;EACL;EA8BAG,oBAAoB,GAAG;IACnB,IAAI,CAAClB,QAAQ,CAAC;MAACc,QAAQ,EAAE,KAAK;MAAEC,UAAU,EAAE;IAAI,CAAC,CAAC;EACtD;EAEAI,MAAM,GAAG;IACL,IAAG,IAAI,CAACZ,KAAK,CAACO,QAAQ,EAAE;MACtB,oBAAQ,QAAC,QAAQ;QAAC,EAAE,EAAG,WAAU,IAAI,CAACP,KAAK,CAACQ,UAAW;MAAE;QAAA;QAAA;QAAA;MAAA,QAAE;IAC7D;IACA;IACA,oBACE,QAAC,aAAa;MACZ,YAAY,EAAI,IAAI,CAACjB,YAAa;MAClC,YAAY,EAAE,IAAI,CAACM;IAAa;MAAA;MAAA;MAAA;IAAA,QAChC;EAER;AACJ;;AAEA;AACA;AACA;AACA,MAAMgB,WAAW,GAAIC,QAAQ,IAAK;EAC9B,OAAO;IACHR,SAAS,EAAGP,MAAM,IAAKe,QAAQ,CAAC3B,cAAc,CAACY,MAAM,CAAC;EAC1D,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA,eAAef,OAAO,CAAC,IAAI,EAAE6B,WAAW,CAAC,CAACzB,kBAAkB,CAAC"},"metadata":{},"sourceType":"module"}