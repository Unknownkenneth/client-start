{"ast":null,"code":"/*==================================================\r\n/src/store/index.js\r\n\r\nIt contains the necessities and accessories for constructing the Redux Store.\r\nIt creates a single Redux Store that holds the complete state tree of the app, so that the Redux Store state can access the states in all Reducers. \r\n================================================== */import{combineReducers,applyMiddleware,createStore}from'redux';import{createLogger}from'redux-logger';import thunk from'redux-thunk';// Import all Reducers from the barrel file (/src/store/reducers/index.js)\nimport*as reducers from'./reducers';// Construct the Redux Store:\n// Create a single Root Reducer to combine all Reducers, so that the Redux Store state can \n// access the states in all Reducers of the app.\nvar rootReducer=combineReducers(reducers);// Create a logger middleware to log dispatched Actions in console,\n// so that it displays prevState, nextState, and Action when an Action is dispatched.\nvar logger=createLogger({collapsed:true});// Collapse console messages when displayed\n// Create a Redux Store using Root Reducer and a middleware pipeline consisting of Thunk and logger.\nvar store=createStore(rootReducer,applyMiddleware(thunk,logger));// Export the Redux Store by default, which will be provided to and injected within our entire application\nexport default store;","map":{"version":3,"names":["combineReducers","applyMiddleware","createStore","createLogger","thunk","reducers","rootReducer","logger","collapsed","store"],"sources":["C:/Users/lowka/OneDrive/Desktop/web dev/client-start/src/store/index.js"],"sourcesContent":["/*==================================================\r\n/src/store/index.js\r\n\r\nIt contains the necessities and accessories for constructing the Redux Store.\r\nIt creates a single Redux Store that holds the complete state tree of the app, so that the Redux Store state can access the states in all Reducers. \r\n================================================== */\r\nimport { combineReducers, applyMiddleware, createStore } from 'redux';\r\nimport { createLogger } from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\n\r\n// Import all Reducers from the barrel file (/src/store/reducers/index.js)\r\nimport * as reducers from './reducers';\r\n\r\n// Construct the Redux Store:\r\n// Create a single Root Reducer to combine all Reducers, so that the Redux Store state can \r\n// access the states in all Reducers of the app.\r\nconst rootReducer = combineReducers(reducers);  \r\n// Create a logger middleware to log dispatched Actions in console,\r\n// so that it displays prevState, nextState, and Action when an Action is dispatched.\r\nconst logger = createLogger({ collapsed: true });  // Collapse console messages when displayed\r\n// Create a Redux Store using Root Reducer and a middleware pipeline consisting of Thunk and logger.\r\nconst store = createStore(rootReducer, applyMiddleware(thunk, logger));\r\n\r\n// Export the Redux Store by default, which will be provided to and injected within our entire application\r\nexport default store;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,qDACA,OAASA,eAAe,CAAEC,eAAe,CAAEC,WAAW,KAAQ,OAAO,CACrE,OAASC,YAAY,KAAQ,cAAc,CAC3C,MAAOC,MAAK,KAAM,aAAa,CAE/B;AACA,MAAO,GAAKC,SAAQ,KAAM,YAAY,CAEtC;AACA;AACA;AACA,GAAMC,YAAW,CAAGN,eAAe,CAACK,QAAQ,CAAC,CAC7C;AACA;AACA,GAAME,OAAM,CAAGJ,YAAY,CAAC,CAAEK,SAAS,CAAE,IAAK,CAAC,CAAC,CAAG;AACnD;AACA,GAAMC,MAAK,CAAGP,WAAW,CAACI,WAAW,CAAEL,eAAe,CAACG,KAAK,CAAEG,MAAM,CAAC,CAAC,CAEtE;AACA,cAAeE,MAAK"},"metadata":{},"sourceType":"module"}